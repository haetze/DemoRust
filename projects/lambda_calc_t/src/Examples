:set or (λa.(λb.(((if a) true) b)))
:set and (λa.(λb.(((if a) b) false)))
:set zero_or_one (λn.((or (zerop n)) ((= 1) n)))
:set add (λx.(λy.((+ x) y)))
:set sub (λx.(λy.((+ x) ((* -1) y))))
:set fac (λn.(((if (zerop n)) 1) ((* n) (fac (dec n)))))
:set fib (λn.(((if (zero_or_one n)) 1) ((+ (fib (dec n))) (fib (dec (dec n))))))
:set test_a (λn.(dec (dec n)))
:set test_b (λn.(inc (inc n)))
:set pow (λp.(λn.(((if (zerop p)) 1) ((* n) ((pow (dec p)) n)))))
:set sq (pow 2)
:set mult (λm.(λn.(((if (zerop m)) 0) ((+ n) ((mult (dec m)) n)))))
:set to_list (λn.(((if (zerop n)) nil) ((cons n) (to_list (dec n)))))
:set eeq (λa.(λb.((= a) b)))